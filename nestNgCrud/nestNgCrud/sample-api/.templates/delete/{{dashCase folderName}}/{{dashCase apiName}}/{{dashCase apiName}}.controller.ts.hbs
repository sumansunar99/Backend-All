import {
  Controller,
  Delete,
  HttpException,
  HttpStatus,
  HttpCode,
  Param,
} from '@nestjs/common';
import {
  ApiBearerAuth,
  ApiOperation,
  ApiResponse,
  ApiTags,
} from '@nestjs/swagger';
import { PrismaService } from 'src/prisma.service';

@ApiTags('{{pascalCase moduleName}}')
@Controller('{{dashCase moduleName}}/{{dashCase controllerName}}')
export class {{pascalCase apiName}}Controller {
  constructor(private readonly prismaService: PrismaService) {}

  @Delete(':id')
  @ApiResponse({
    status: HttpStatus.NO_CONTENT,
    description: '',
  })
  @ApiOperation({ operationId: '{{camelCase apiName}}' })
  @HttpCode(204)
  async execute(@Param('id') id: string): Promise<void> {
    const result = await this.prismaService.{{camelCase name}}.findUnique({
      where: { id: id },
    });
    if (!result)
      throw new HttpException('{{pascalCase name}} Not Found', HttpStatus.NOT_FOUND);
    await this.prismaService.{{camelCase name}}.delete({ where: { id: id } });
  }
}
